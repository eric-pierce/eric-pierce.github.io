[{
    "title": "Open Sourcing BIOS with Coreboot",
    "date": "",
    "description": "",
    "body": "I\u0026rsquo;m often the default \u0026ldquo;recycler\u0026rdquo; for old tech from friends and family, which means that I have a healthy pile of phones, computers, kindles, and more, most of which end up in the hands of others when their devices break or when I can help them out with a free upgrade.\nA few years ago I inherited an old Lenovo W530 laptop from a parent who upgraded to a new mac, and I knew exactly what I had in mind for it - a new \u0026ldquo;brain\u0026rdquo; for the arcade machine (MAME Machine) I built back in undergrad. The idea was seeded, but it took COVID-19 to disrupt life enough for me to actually focus on it.\nLike many others, I have numerous services which I use frequently for work, fun, productivity, and more. While using third party services is the easiest and fastest way to fulill a need, it is far from the most privacy friendly, or depending on your view the most secure. I decided that I wanted to change that, and in 2019 I began to replace third party hosted services with services I can host on a personal Virtual Private Server, and have complete control of the data. Below is a summary of the replacements I made:\nSelf-Hosted - Cloud\n Google Contacts | Nextcloud Contacts Google Calendar | Nextcloud Calendar Dropbox | Nextcloud / Cryptomator iCloud Notes | Standardnotes Text File | Nextcloud Tasks / 2do Lastpass | Bitwarden_rs Pocket | Wallabag Feedly | TT-RSS Nothing | Firefox Sync Server Nothing | Restic Backup to Backblaze  Self-Hosted - Local\n Nothing | PiHole + Unbound + DoH Nothing | PiVPN - Wireguard iCloud Computer Backup | NAS Time Machine Amazon Cloudcam | DaFang Hacks / VLC / Telegram  I also took this opportunity to move from Gmail to ProtonMail for email. While email can be self-hosted as well, I felt that swapping the very privacy-unfriendly Google service for a trusted encrypted solutions provider (ProtonMail) met my goal.\nIn 2020 I went through a migration from Traefik 1.7 to 2.3, and took the opportunity to completely revamp my self hosting approach, applications, best practices, security, and more. I\u0026rsquo;m hosting everything on a Contabo VPS and on a local Raspberry Pi.\nLocal Raspberry Pi\n Unbound - Local recursive DNS resolver PiHole - DNS black hole Wireguard (PiVPN) - VPN Access through PiVPN  I bought several cheap Wyze 2.0 Cameras and put the DaFang custom firmware on them this lets me VPN into my home network and connect to network streams from the cameras using VLC on my phone. I have motion detection notifications running through Telegram with stills taken when motion is detected\nContabo VPS - 9 Euro per month, 6 Cores, 16GB Ram, 400GB Storage (SSD)\nAs part of my security updates, I decided that some services I host had no business being externally accessible, even when they\u0026rsquo;re behind HTTP authentication. I set up wireguard docker image to allow me to access my VPS over VPN, and then modified wireguard\u0026rsquo;s Coredns to allow me to access the services I want on the domains I would have previously accessed externally. I followed this guide for that.\nOther security updates include moving to official images for everything, leveraging Cloudflare\u0026rsquo;s proxy service for any web based applications (though some may argue this isn\u0026rsquo;t as good for privacy), and moving to docker secrets where possible\nI also moved to a socket proxy for the docker socket rather than allowing any images (except for the socket proxy itself) direct access to the docker socket.\nEverything except fail2ban on my Contabo VPS are sourced from docker images.\nWeb Applications hosted behind Wireguard VPN\n Portainer - Docker Management PhpMyAdmin - Management of a MariaDB database for applications which don\u0026rsquo;t support Postgres PgAdmin - Management of a Postgres database for any applications which do support Postgres Redis Commander - for managing my Redis Memcache installation to speed up Nextcloud  Non-Open-web accessible applications\n Docker Socket Proxy - This allows applications to access only the services they need from the socket proxy and nothing else Watchtower - Docker image updates, used as Ouroborus is no longer actively updated MariaDB - Open source MySQL server for applications which don\u0026rsquo;t support my preferred SQL server, Postgres Postgres - Open source SQL server for applications which it Redis - Memcache to speed up Nextcloud Restic/Resticker - This is a docker image which contains a parameterized version of Restic, for automated, encrypted, incremental backups. I\u0026rsquo;m backing up to a Backblaze B2 bucket which is low cost and use based.  Open-web accessible applications\n Traefik 2.3 - used for reverse proxying open-web applications Firefox Syncserver (MariaDB) - this is in the process of being moved to Rust, but that image isn\u0026rsquo;t ready yet. Still using the old python 2.7 version to sync browser settings, extension lists, and bookmarks Wallabag (MariaDB) - Pocket replacement, this integrates very well with iOS and allows me to \u0026ldquo;stash\u0026rdquo; anything I come across on twitter, reddit, browsing, and more. I also have Wallabag set up as an RSS feed so when I stash something it shows up in my RSS reader. In the near future I\u0026rsquo;ll migrate this from MariaDB to Postgres Nextcloud (Postgres) - primarily used as Google replacement, and I use it for Contacts, Calendar, Google Drive, and Tasks/ToDo hosting Nextcloud-Cron - the same Nextcloud image but manages the \u0026ldquo;maintenance\u0026rdquo; jobs for Nextcloud without needing to schedule cron jobs on the host Wireguard - allows me to access internal services via VPN. This is one of the few \u0026ldquo;unofficial\u0026rdquo; images as I don\u0026rsquo;t think wireguard hosts an official one Tiny-Tiny-RSS (Postgres) - Last year the developer created official docker images, so I moved from an unofficially maintained one to the official ones. This consists of a backend and frontend component, as well as an updater cron job. I much prefer this approach as the unofficial image wasn\u0026rsquo;t static, and was just an older docker image that pulled the latest version of the app from Git. Bitwarden_rs (Postgres) - This is the unofficial bitwarden api/backend/frontend implementation in Rust. I moved from the default sqlite backend to a postgres backend and found that it is now much speedier when updating folders Standardnotes Sync Server (MariaDB) - This is the official backend for standardnotes. I looked at the Go implementation as well (standardfile) but already had this running so didn\u0026rsquo;t switch over. This is a new service for me as I was using the Nextcloud Notes before, but wasn\u0026rsquo;t happy with the mobile app experience (manual sync over webdav in the Notebooks app). The official iOS app is just as seamless as the native iPhone notes app. Standardnotes Web App - the web frontend for standardnotes Standardnotes Extensions - This is a docker image which contains all the open source extensions for standardnotes. It\u0026rsquo;s very simple to run, and lets you use several high powered extensions all self-hosted  Services I\u0026rsquo;m considering adding in the future:\n Authelia SSO Bookstack MeshCentral Papermerge Monica CRM fail2ban - may move it into a container  ",
    "ref": "/posts/coreboot/"
  },{
    "title": "Mask Detection with CreateML",
    "date": "",
    "description": "",
    "body": "Overview Mask wearing is a simple and powerful way to combat COVID, but it is most effective when practiced at scale within populations. Unfortunately mask wearing has become politicized in the United States, and businesses are often in the position of policing and enforcing mask wearing themselves.\nEnter the COVID Bouncer - an application which can be used to detect mask wearing without needing to put a real person at risk of exposure. When paired with a door lock, the COVID Bouncer can detect the presence of face masks before allowing entry into a business.\nThe Bouncer is able to identify people not wearing masks as well as those wearing masks:\nIt also functions with images that include multiple subjects as can be seen in the examples below:\nTools Used This project was built using Apple\u0026rsquo;s development stack, including their CreateML framework.\n The only tools required to use this repository is ther XCode suite, which includes createML. Roboflow was used during the data preparation phase.  Data Acquisition The data for this project came from two sources - one dataset compiled on kaggle and one compiled by the Roboflow. Both of these datasets consist of images of people wearing masks and people not wearing masks. Some images include a mix of mask wearing and non-wearing individuals. The Kaggle dataset also included incorrectly worn masks, but those were removed due to low data availability.\n Kaggle Mask Detection Dataset Roboflow Mask Wearing Dataset.  Data Preparation These datasets required some modification to align labels, and to convert from their respective formats to one which Apple\u0026rsquo;s CreateML expects.\n Modify the annotations to use \u0026ldquo;with_mask\u0026rdquo; and \u0026ldquo;without_mask\u0026rdquo; as labels Remove the \u0026ldquo;mask_weared_incorrect\u0026rdquo; label from the kaggle dataset Convert annotation component of both datasets from Pascal VOC XML to Apple\u0026rsquo;s CreateML JSON  I used a 70/20/10 split for train/test/validation for this dataset. The final dataset consisted of:\n 698 training images 199 testing images 100 validation images  Model Architecture I evaluated two training methods as part of this model development. Both models were trained for 18,000 iterations, which took ~14 hours per model. I used loss as an evaluation measure for both models, which is an indicator of how far off from correct prediction a model is for a single example.\nFirst I trained a Full Network (non-Transfer Learning) with an architecture based on YOLOv2:\nThe Full Network training results are below, and resulted in a loss of 1.355\nSecond I trained a Transfer Network based on Apple\u0026rsquo;s \u0026ldquo;Object Vision Feature Print\u0026rdquo;:\nThe Transfer Network training results are below, and resulted in a loss of 0.31\nDeployment I used my personal iPhone as my Edge Device. Modern iPhones include a specialized chip for Neural Network processing. I built my iPhone app using a framework available on GitHub here. This framework was an excellent starting point, but I modified the application code to:\n Use the custom model I trained instead of the roadsign detector Only highlight objects detected when there is a \u0026gt; 90% accuracy Not allow for objects to overlap with each other (ie no detection of both mask wearing and non-mask-wearing) Highlight masks in Green, and non-masks in Red  Roadblocks I ran into some issues with my personal phone not functioning correctly. The app I built functioned as expected in the iOS simulator, as well on older iPhones such as the iPhone X. I expect that this has to do with the camera on the new phones capturing images in a different format.\nNext Steps Next steps for this project are to apply it to live video as opposed to still images. I\u0026rsquo;ve already developed an application which does this using the Breakfast Detector example written by Apple. I\u0026rsquo;m not satisfied with the results of this yet.\nFrom a modeling architecture standpoint there is absolutely opportunity to increase accuracy. The simplest way to do this is to procure and train using more data. The dataset I have doesn’t have balanced examples of masks vs no-masks. Fortunately the gap is primarily on the non-mask class, and there are several datasets available which can be merged with my current dataset for a more balanced input.\n",
    "ref": "/posts/mask-detection/"
  },{
    "title": "Building A Personal Cloud",
    "date": "",
    "description": "",
    "body": "Like many others, I have numerous services which I use frequently for work, fun, productivity, and more. While using third party services is the easiest and fastest way to fulill a need, it is far from the most privacy friendly, or depending on your view the most secure. I decided that I wanted to change that, and in 2019 I began to replace third party hosted services with services I can host on a personal Virtual Private Server, and have complete control of the data. Below is a summary of the replacements I made:\nSelf-Hosted - Cloud\n Google Contacts | Nextcloud Contacts Google Calendar | Nextcloud Calendar Dropbox | Nextcloud / Cryptomator iCloud Notes | Standardnotes Text File | Nextcloud Tasks / 2do Lastpass | Bitwarden_rs Pocket | Wallabag Feedly | TT-RSS Nothing | Firefox Sync Server Nothing | Restic Backup to Backblaze  Self-Hosted - Local\n Nothing | PiHole + Unbound + DoH Nothing | PiVPN - Wireguard iCloud Computer Backup | NAS Time Machine Amazon Cloudcam | DaFang Hacks / VLC / Telegram  I also took this opportunity to move from Gmail to ProtonMail for email. While email can be self-hosted as well, I felt that swapping the very privacy-unfriendly Google service for a trusted encrypted solutions provider (ProtonMail) met my goal.\nIn 2020 I went through a migration from Traefik 1.7 to 2.3, and took the opportunity to completely revamp my self hosting approach, applications, best practices, security, and more. I\u0026rsquo;m hosting everything on a Contabo VPS and on a local Raspberry Pi.\nLocal Raspberry Pi\n Unbound - Local recursive DNS resolver PiHole - DNS black hole Wireguard (PiVPN) - VPN Access through PiVPN  I bought several cheap Wyze 2.0 Cameras and put the DaFang custom firmware on them this lets me VPN into my home network and connect to network streams from the cameras using VLC on my phone. I have motion detection notifications running through Telegram with stills taken when motion is detected\nContabo VPS - 9 Euro per month, 6 Cores, 16GB Ram, 400GB Storage (SSD)\nAs part of my security updates, I decided that some services I host had no business being externally accessible, even when they\u0026rsquo;re behind HTTP authentication. I set up wireguard docker image to allow me to access my VPS over VPN, and then modified wireguard\u0026rsquo;s Coredns to allow me to access the services I want on the domains I would have previously accessed externally. I followed this guide for that.\nOther security updates include moving to official images for everything, leveraging Cloudflare\u0026rsquo;s proxy service for any web based applications (though some may argue this isn\u0026rsquo;t as good for privacy), and moving to docker secrets where possible\nI also moved to a socket proxy for the docker socket rather than allowing any images (except for the socket proxy itself) direct access to the docker socket.\nEverything except fail2ban on my Contabo VPS are sourced from docker images.\nWeb Applications hosted behind Wireguard VPN\n Portainer - Docker Management PhpMyAdmin - Management of a MariaDB database for applications which don\u0026rsquo;t support Postgres PgAdmin - Management of a Postgres database for any applications which do support Postgres Redis Commander - for managing my Redis Memcache installation to speed up Nextcloud  Non-Open-web accessible applications\n Docker Socket Proxy - This allows applications to access only the services they need from the socket proxy and nothing else Watchtower - Docker image updates, used as Ouroborus is no longer actively updated MariaDB - Open source MySQL server for applications which don\u0026rsquo;t support my preferred SQL server, Postgres Postgres - Open source SQL server for applications which it Redis - Memcache to speed up Nextcloud Restic/Resticker - This is a docker image which contains a parameterized version of Restic, for automated, encrypted, incremental backups. I\u0026rsquo;m backing up to a Backblaze B2 bucket which is low cost and use based.  Open-web accessible applications\n Traefik 2.3 - used for reverse proxying open-web applications Firefox Syncserver (MariaDB) - this is in the process of being moved to Rust, but that image isn\u0026rsquo;t ready yet. Still using the old python 2.7 version to sync browser settings, extension lists, and bookmarks Wallabag (MariaDB) - Pocket replacement, this integrates very well with iOS and allows me to \u0026ldquo;stash\u0026rdquo; anything I come across on twitter, reddit, browsing, and more. I also have Wallabag set up as an RSS feed so when I stash something it shows up in my RSS reader. In the near future I\u0026rsquo;ll migrate this from MariaDB to Postgres Nextcloud (Postgres) - primarily used as Google replacement, and I use it for Contacts, Calendar, Google Drive, and Tasks/ToDo hosting Nextcloud-Cron - the same Nextcloud image but manages the \u0026ldquo;maintenance\u0026rdquo; jobs for Nextcloud without needing to schedule cron jobs on the host Wireguard - allows me to access internal services via VPN. This is one of the few \u0026ldquo;unofficial\u0026rdquo; images as I don\u0026rsquo;t think wireguard hosts an official one Tiny-Tiny-RSS (Postgres) - Last year the developer created official docker images, so I moved from an unofficially maintained one to the official ones. This consists of a backend and frontend component, as well as an updater cron job. I much prefer this approach as the unofficial image wasn\u0026rsquo;t static, and was just an older docker image that pulled the latest version of the app from Git. Bitwarden_rs (Postgres) - This is the unofficial bitwarden api/backend/frontend implementation in Rust. I moved from the default sqlite backend to a postgres backend and found that it is now much speedier when updating folders Standardnotes Sync Server (MariaDB) - This is the official backend for standardnotes. I looked at the Go implementation as well (standardfile) but already had this running so didn\u0026rsquo;t switch over. This is a new service for me as I was using the Nextcloud Notes before, but wasn\u0026rsquo;t happy with the mobile app experience (manual sync over webdav in the Notebooks app). The official iOS app is just as seamless as the native iPhone notes app. Standardnotes Web App - the web frontend for standardnotes Standardnotes Extensions - This is a docker image which contains all the open source extensions for standardnotes. It\u0026rsquo;s very simple to run, and lets you use several high powered extensions all self-hosted  Services I\u0026rsquo;m considering adding in the future:\n Authelia SSO Bookstack MeshCentral Papermerge Monica CRM fail2ban - may move it into a container  ",
    "ref": "/posts/building-a-personal-cloud/"
  },{
    "title": "About",
    "date": "",
    "description": "A place to Share Projects",
    "body": "I\u0026rsquo;ve always had a project or two in progress, many of which I work through by following guides and walkthroughs posted by others.\nI created this site with the intention of documenting what I work on, and to provide additional guidance for others which may be interested in building on it.\n",
    "ref": "/about/"
  },{
    "title": "Contact",
    "date": "",
    "description": "",
    "body": "",
    "ref": "/contact/"
  }]
