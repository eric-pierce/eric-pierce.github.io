<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Docker - Tag - eric-pierce.com</title><link>https://eric-pierce.com/tags/docker/</link><description>Docker - Tag - eric-pierce.com</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Mon, 08 Nov 2021 21:45:14 -0600</lastBuildDate><atom:link href="https://eric-pierce.com/tags/docker/" rel="self" type="application/rss+xml"/><item><title>Placing Select Docker Containers Behind a VPN</title><link>https://eric-pierce.com/placing-select-docker-containers-behind-a-vpn/</link><pubDate>Mon, 08 Nov 2021 21:45:14 -0600</pubDate><guid>https://eric-pierce.com/placing-select-docker-containers-behind-a-vpn/</guid><description><![CDATA[<h3 id="who-needs-a-vpn">Who Needs A VPN?</h3>
<p>Docker enables containers to quickly be spun up and used anywhere, but one of the risks many self-hosters take is exposing sensitive services to the open web. There is a balance between safety and convenience with each application exposed, but there are some applications which have no need to be publicly accessible.</p>
<p>These typically include administrative applications such as:</p>
<ul>
<li>Portainer</li>
<li>PGAdmin (Postgres)</li>
<li>phpMyAdmin (Mariadb)</li>
<li>Redis Commander</li>
<li>Any other service you don&rsquo;t want exposed</li>
</ul>
<p>One way to keep these services running but prevent them from being exposed is to place them behind a secure VPN. There are just a handful of major VPN protocols out there today, OpenVPN, IPSec, and the new Wireguard protocol are the big names. While Wireguard is new on the block and may not have had the level of auditing that OpenVPN has, it is blazing fast, and apparently so elegantly written that the creator of Linux, Linus Torvolds, <a href="https://lists.openwall.net/netdev/2018/08/02/124" target="_blank" rel="noopener noreffer">called it a work of art</a> before including it directly in the Linux Kernel.</p>
<p>Some may want to hide all their applications behind a VPN for very high security, while others like may only want to hide the ones which are rarely needed. This guide outlines how to configure specific services to only be accessible from behind your VPN while leaving others publicly accessible.</p>
<h3 id="set-up-a-local-docker-compose-network">Set up a local docker-compose network</h3>
<p>Add a new network to docker-compose for your services to live on/</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">vpn-subnet</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">external</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">vpn-subnet</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="setting-up-wireguard">Setting up Wireguard</h3>
<p>Although Wireguard doesn&rsquo;t maintain a docker container, the excellent folks at linuxserver.io do. Setting up a wireguard container in Docker is as simple as adding a new service to your docker-compose file. This docker-compose snippet assumes you have a few environment variables configured:</p>
<ul>
<li><strong>DOCKERDIR</strong> set to the directory you want your services to store their non-temporary data files in. For this example we assume it is ~/docker/</li>
<li><strong>DOMAINNAME</strong> set to the domain you&rsquo;re hosting the content on.</li>
<li><strong>PUID</strong> set to the user id your docker runs under (run <code>id yourdockerusername</code> and find the numeric value associated with &ldquo;uid&rdquo;)</li>
<li><strong>PGID</strong> set to the group id your docker runs under (run <code>id yourdockerusername</code> and find the numeric value associated with &ldquo;gid&rdquo;)</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="w">  </span><span class="nt">wireguard</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">wireguard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">linuxserver/wireguard:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">vpn-subnet</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ipv4_address</span><span class="p">:</span><span class="w"> </span><span class="m">20.20.10.5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">$DOCKERDIR/wireguard:/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">/lib/modules:/lib/modules</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">ports</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="m">51820</span><span class="p">:</span><span class="m">51820</span><span class="l">/udp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">sysctls</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">net.ipv4.conf.all.src_valid_mark=1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">cap_add</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">NET_ADMIN</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">SYS_MODULE</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">security_opt</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="kc">no</span>-<span class="l">new-privileges:true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=$TZ</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=$PUID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=$PGID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">SERVERURL=wireguard.$DOMAINNAME</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">SERVERPORT=51820</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PEERS=2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PEERDNS=auto</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">INTERNAL_SUBNET=10.13.14.0</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Most of the above should look pretty familiar if you&rsquo;ve used docker-compose before, with the exception of the &ldquo;sysctls&rdquo; and &ldquo;cap_add&rdquo; sections. The &ldquo;sysctls&rdquo; section enables the wireguard container to manage ipv4 network connections, something we need for our internal VPN subnet. The &ldquo;cap_add&rdquo; section essentially grants some extra privileges to our container, such as the ability to control network functions, and manage kernel modules. We&rsquo;re also mounting /lib/modules as a volume into the container.</p>
<p>I chose to set the container specific environment variable &ldquo;PEERS&rdquo; to 2, which means that the container will automatically generate two profiles for connections. I personally use one for my phone to connect on the go and one for my desktop. You&rsquo;ll see the QR codes for these peers in the logs, and if you want to see one of the codes you can run <code>sudo docker exec -it wireguard /app/show-peer 1</code>.</p>
<h3 id="set-up-dns-firewall-passthrough-and-port-forwarding">Set up DNS, Firewall Passthrough, and Port Forwarding</h3>
<p>If you aren&rsquo;t using wildcard cname values for subdomains, you&rsquo;ll need to manually add &lsquo;wireguard&rsquo; as a new CNAME entry on your DNS manager. Note that this does open up the standard wireguard port of 51820 to the internet, so if you&rsquo;re hosting at home you will need to forward whichever port you decide to use from your router to your server.</p>
<p>You&rsquo;ll also need to allow access to the port via your firewall</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">sudo ufw allow 51820/udp 
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="place-container-behind-your-new-vpn">Place Container Behind your New VPN</h3>
<p>We need to assign static ip addresses on the network we created above. The YAML format for this can be a bit different, and you may need to specify &ldquo;null&rdquo; as the target for any existing networks assigned to the containers. In my case I have an &ldquo;internal&rdquo; network used for services such as my database containers as can be seen in the examples of some services I&rsquo;ve placed behind my VPN below:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="w">  </span><span class="nt">pgadmin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">pgadmin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">dpage/pgadmin4:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">internal</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">vpn-subnet</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ipv4_address</span><span class="p">:</span><span class="w"> </span><span class="m">20.20.10.3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">postgres</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">security_opt</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="kc">no</span>-<span class="l">new-privileges:true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">volumes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">$DOCKERDIR/pgadmin:/var/lib/pgadmin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=$TZ</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=$PUID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=$PGID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGADMIN_DEFAULT_EMAIL=$PERSONAL_EMAIL</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGADMIN_LISTEN_PORT=5050</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">pma</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">phpmyadmin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">image</span><span class="p">:</span><span class="w"> </span><span class="l">phpmyadmin/phpmyadmin:latest</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">container_name</span><span class="p">:</span><span class="w"> </span><span class="l">phpmyadmin</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restart</span><span class="p">:</span><span class="w"> </span><span class="l">unless-stopped</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">networks</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">internal</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">vpn-subnet</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ipv4_address</span><span class="p">:</span><span class="w"> </span><span class="m">20.20.10.4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">depends_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">mariadb</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">secrets</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">mysql_root_password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">environment</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">TZ=$TZ</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PUID=$PUID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PGID=$PGID</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">PMA_HOST=mariadb</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">MYSQL_ROOT_PASSWORD_FILE=/run/secrets/mysql_root_password</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">ServerName=$DOMAINNAME</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="assign-readable-domain-names">Assign Readable Domain Names</h3>
<p>Technically your services are accessible from the IP addresses you&rsquo;ve assigned, after you&rsquo;ve connected to your VPN, but who is going to remember the IP address you assigned to each? To get around this and assign standard domain names, we can utilize the COREDNS setup running in the Wireguard container.</p>
<p>First create a wireguard directory in your docker apps directory. This assumes that you&rsquo;re using your home directory as the docker apps directory</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">mkdir ~/docker/wireguard/coredns/ 
</span></span></code></pre></td></tr></table>
</div>
</div><p>Now we&rsquo;ll add the Corefile configuration it needs to manage local domain names.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">nano ~/docker/wireguard/coredns/Corefile
</span></span></code></pre></td></tr></table>
</div>
</div><p>The below is an example of what the Corefile looks like for the four applications I&rsquo;ve configured. The first portion starting with &ldquo;loop&rdquo; effectively forwards DNS requests to the host DNS resolver. Replace the subdomains with the applications you want to host behind your VPN. Replace EXAMPLE.COM with your domain name, no CAPS needed.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-JSON" data-lang="JSON"><span class="line"><span class="cl"><span class="err">.</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">loop</span>
</span></span><span class="line"><span class="cl">    <span class="err">forward</span> <span class="err">.</span> <span class="err">/etc/resolv.conf</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">portainer.EXAMPLE.COM:</span><span class="mi">53</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">file</span> <span class="err">portainer.EXAMPLE.COM.db</span>
</span></span><span class="line"><span class="cl">    <span class="err">log</span>
</span></span><span class="line"><span class="cl">    <span class="err">errors</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">pma.EXAMPLE.COM:</span><span class="mi">53</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">file</span> <span class="err">pma.EXAMPLE.COM.db</span>
</span></span><span class="line"><span class="cl">    <span class="err">log</span>
</span></span><span class="line"><span class="cl">    <span class="err">errors</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">pga.EXAMPLE.COM:</span><span class="mi">53</span> <span class="p">{</span>       
</span></span><span class="line"><span class="cl">    <span class="err">file</span> <span class="err">pga.EXAMPLE.COM.db</span>
</span></span><span class="line"><span class="cl">    <span class="err">log</span>                  
</span></span><span class="line"><span class="cl">    <span class="err">errors</span>               
</span></span><span class="line"><span class="cl"><span class="p">}</span>                        
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="err">redis.EXAMPLE.COM:</span><span class="mi">53</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="err">file</span> <span class="err">redis.EXAMPLE.COM.db</span>
</span></span><span class="line"><span class="cl">    <span class="err">log</span>
</span></span><span class="line"><span class="cl">    <span class="err">errors</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Now we need to create the files referenced in the above Corefile, which hold the configuration details each service needs. Here&rsquo;s an example for my portainer container, again replace EXAMPLE.COM with your domain name.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">nano ~/docker/wireguard/coredns/portainer.EXAMPLE.COM.db
</span></span></code></pre></td></tr></table>
</div>
</div><p>The contents should follow this structure, replacing EXAMPLE.COM with your domain name.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">portainer.EXAMPLE.COM.        3600 IN SOA portainer.EXAMPLE.COM. YOURNAME.portainer.EXAMPLE.COM. (
</span></span><span class="line"><span class="cl">                                2017042745 ; serial
</span></span><span class="line"><span class="cl">                                7200       ; refresh (2 hours)
</span></span><span class="line"><span class="cl">                                3600       ; retry (1 hour)
</span></span><span class="line"><span class="cl">                                1209600    ; expire (2 weeks)
</span></span><span class="line"><span class="cl">                                3600       ; minimum (1 hour)
</span></span><span class="line"><span class="cl">                                )
</span></span><span class="line"><span class="cl">portainer.EXAMPLE.COM.     IN A     20.20.10.2
</span></span></code></pre></td></tr></table>
</div>
</div><p>The &ldquo;serial&rdquo; value can be set to any value, one suggestion would be the date you added the service.
You should also replace the &ldquo;YOURNAME&rdquo; in the example above with an identifier. I personally use &ldquo;epierce&rdquo;.
You&rsquo;ll also want to modify the IP address on the last line of the file to be unique to that service, and to match the IP address you specified in your docker-compose file under <code>vpn-subnet: ipv4_address:</code> for that service.</p>
<h3 id="secure-your-files">Secure Your Files</h3>
<p>These files are a little sensitive, so let&rsquo;s lock them down to be root accessible only.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-zsh" data-lang="zsh"><span class="line"><span class="cl">sudo chown root:root ~/docker/wireguard 
</span></span><span class="line"><span class="cl">sudo chmod <span class="m">600</span> ~/docker/wireguard
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="testing-access">Testing Access</h3>
<p>Your services are now available only when you connect to your VPN. Go ahead and connect and try accessing one of your services by going to the domain name you configured (ie pga.EXAMPLE.COM).</p>
<p>We aren&rsquo;t actually going through a reverse proxy here, and there isn&rsquo;t a service like Caddy, Traefik, or NGINX which manages port mapping. Services accessible over port 80 will work as normal, but services which need to be accessed on a non-standard port will need to have that port specified. For example portainer which I have configured to listen on port 9000, will need to be accessed by typing <code>portainer.EXAMPLE.COM:9000</code> in your URL bar.</p>
<p>Now you should be able to access your services securely, while keeping your standard services accessible as normal.</p>
]]></description></item><item><title>Building a Personal Cloud</title><link>https://eric-pierce.com/building-a-personal-cloud/</link><pubDate>Sat, 28 Nov 2020 17:16:19 -0600</pubDate><guid>https://eric-pierce.com/building-a-personal-cloud/</guid><description><![CDATA[<p>Like many others, I have numerous services which I use frequently for work, fun, productivity, and more. While using third party services is the easiest and fastest way to fulfill a need, it is far from the most privacy friendly, or depending on your view the most secure. I decided that I wanted to change that, and in 2019 I began to replace third party hosted services with services I can host on a personal Virtual Private Server, and have complete control of the data. Below is a summary of the replacements I made:</p>
<h3 id="hosting-locations">Hosting Locations</h3>
<p><strong>Self-Hosted - Cloud</strong></p>
<ul>
<li>Google Contacts | Nextcloud Contacts</li>
<li>Google Calendar | Nextcloud Calendar</li>
<li>Dropbox | Nextcloud / Cryptomator</li>
<li>iCloud Notes | Standardnotes</li>
<li>Text File | Nextcloud Tasks / 2do</li>
<li>Lastpass | Vaultwarden</li>
<li>Pocket | Wallabag</li>
<li>Feedly | TT-RSS</li>
<li>TeamViewer | MeshCentral</li>
<li>Nothing | Firefox Sync Server</li>
<li>Nothing | Restic Backup to Backblaze</li>
<li>Nothing | Tandoor Recipes</li>
</ul>
<p><strong>Self-Hosted - Local</strong></p>
<ul>
<li>Nothing | PiHole + Unbound + DoH</li>
<li>Nothing | PiVPN - Wireguard</li>
<li>iCloud Computer Backup | NAS Time Machine</li>
<li>Amazon Cloudcam | DaFang Hacks / VLC / Telegram</li>
</ul>
<p>I also took this opportunity to move from Gmail to ProtonMail for email. While email can be self-hosted as well, I felt that swapping the very privacy-unfriendly Google service for a trusted encrypted solutions provider (ProtonMail) met my goal.</p>
<p>In 2020 I went through a migration from Traefik 1.7 to 2.4, and took the opportunity to completely revamp my self hosting approach, applications, best practices, security, and more. I&rsquo;m hosting everything on a Contabo VPS and on a local Raspberry Pi.</p>
<p><strong>Local Raspberry Pi</strong></p>
<ul>
<li><a href="https://nlnetlabs.nl/projects/unbound/about/" target="_blank" rel="noopener noreffer">Unbound</a> - Local recursive DNS resolver</li>
<li><a href="https://pi-hole.net/" target="_blank" rel="noopener noreffer">PiHole</a> - DNS black hole</li>
<li><a href="https://www.pivpn.io/" target="_blank" rel="noopener noreffer">Wireguard (PiVPN)</a> - VPN Access through PiVPN</li>
</ul>
<p>I bought several cheap Wyze 2.0 Cameras and put the <a href="https://github.com/EliasKotlyar/Xiaomi-Dafang-Hacks" target="_blank" rel="noopener noreffer">DaFang custom firmware</a> on them this lets me VPN into my home network and connect to network streams from the cameras using VLC on my phone. I have motion detection notifications running through Telegram with stills taken when motion is detected</p>
<p><strong>Contabo VPS - 9 Euro per month, 6 Cores, 16GB Ram, 400GB Storage (SSD)</strong></p>
<p>As part of my security updates, I decided that some services I host had no business being externally accessible, even when they&rsquo;re behind HTTP authentication. I set up wireguard docker image to allow me to access my VPS over VPN, and then modified wireguard&rsquo;s Coredns to allow me to access the services I want on the domains I would have previously accessed externally. I followed <a href="https://noobgasm.com/tutorial-additional-protection-with-wireguard/" target="_blank" rel="noopener noreffer">this guide</a> for that.</p>
<p>Other security updates include moving to official images for everything, leveraging Cloudflare&rsquo;s proxy service for any web based applications (though some may argue this isn&rsquo;t as good for privacy), and moving to docker secrets where possible</p>
<p>I also moved to a socket proxy for the docker socket rather than allowing any images (except for the socket proxy itself) direct access to the docker socket.</p>
<p>Everything except fail2ban on my Contabo VPS are sourced from docker images.</p>
<h3 id="web-applications-hosted-behind-wireguard-vpn">Web Applications hosted behind Wireguard VPN</h3>
<ul>
<li><a href="https://www.portainer.io/" target="_blank" rel="noopener noreffer">Portainer</a> - Docker Management</li>
<li><a href="https://www.phpmyadmin.net/" target="_blank" rel="noopener noreffer">PhpMyAdmin</a> - Management of a MariaDB database for applications which don&rsquo;t support Postgres</li>
<li><a href="https://www.pgadmin.org/" target="_blank" rel="noopener noreffer">PgAdmin</a> - Management of a Postgres database for any applications which do support Postgres</li>
<li><a href="https://github.com/joeferner/redis-commander" target="_blank" rel="noopener noreffer">Redis Commander</a> (Currently Disabled) - for managing my Redis Memcache installation to speed up Nextcloud</li>
</ul>
<h3 id="non-open-web-accessible-applications">Non-Open-web accessible applications</h3>
<ul>
<li><a href="https://github.com/fluencelabs/docker-socket-proxy" target="_blank" rel="noopener noreffer">Docker Socket Proxy</a> - This allows applications to access only the services they need from the socket proxy and nothing else</li>
<li><a href="https://github.com/containrrr/watchtower" target="_blank" rel="noopener noreffer">Watchtower</a> - Docker image updates, used as Ouroborus is no longer actively updated</li>
<li><a href="https://mariadb.org/" target="_blank" rel="noopener noreffer">MariaDB</a> - Open source MySQL server for applications which don&rsquo;t support my preferred SQL server, Postgres</li>
<li><a href="https://www.postgresql.org/" target="_blank" rel="noopener noreffer">Postgres</a> - Open source SQL server for applications which it</li>
<li><a href="https://redis.io/" target="_blank" rel="noopener noreffer">Redis</a> - Memcache to speed up Nextcloud</li>
<li><a href="https://github.com/djmaze/resticker" target="_blank" rel="noopener noreffer">Restic/Resticker</a> - This is a docker image which contains a parameterized version of Restic, for automated, encrypted, incremental backups. I&rsquo;m backing up to a Backblaze B2 bucket which is low cost and use based.</li>
</ul>
<h3 id="open-web-accessible-applications">Open-web accessible applications</h3>
<ul>
<li><a href="https://traefik.io/" target="_blank" rel="noopener noreffer">Traefik 2.4</a> - used for reverse proxying open-web applications</li>
<li><a href="https://github.com/mozilla-services/syncserver" target="_blank" rel="noopener noreffer">Firefox Syncserver</a> (MariaDB) - this is in the process of being moved to Rust, but that image isn&rsquo;t ready yet. Still using the old python 2.7 version to sync browser settings, extension lists, and bookmarks.</li>
<li><a href="https://www.wallabag.it/en" target="_blank" rel="noopener noreffer">Wallabag</a> (Postgres) - Pocket replacement, this integrates very well with iOS and allows me to &ldquo;stash&rdquo; anything I come across on twitter, reddit, browsing, and more. I also have Wallabag set up as an RSS feed so when I stash something it shows up in my RSS reader.</li>
<li><a href="https://nextcloud.com" target="_blank" rel="noopener noreffer">Nextcloud</a> (Postgres) - primarily used as Google replacement, and I use it for Contacts, Calendar, Drive, and Tasks/ToDo hosting</li>
<li><a href="https://github.com/linuxserver/docker-wireguard" target="_blank" rel="noopener noreffer">Wireguard</a> - allows me to access internal services via VPN. This is one of the few &ldquo;unofficial&rdquo; images I use from linuxserver.io as I don&rsquo;t think wireguard hosts an official one</li>
<li><a href="https://tt-rss.org/" target="_blank" rel="noopener noreffer">Tiny-Tiny-RSS</a> (Postgres) - Last year the developer created official docker images, so I moved from an unofficially maintained one to the official ones. This consists of a backend and frontend component, as well as an updater cron job. I much prefer this approach as the unofficial image wasn&rsquo;t static, and was just an older docker image that pulled the latest version of the app from Git.</li>
<li><a href="https://github.com/dani-garcia/vaultwarden" target="_blank" rel="noopener noreffer">Vaultwarden</a> (Postgres) - This is the unofficial bitwarden api/backend/frontend implementation in Rust. I moved from the default sqlite backend to a postgres backend and found that it is now much speedier when updating folders</li>
<li><a href="https://github.com/standardnotes/standalone" target="_blank" rel="noopener noreffer">Standardnotes Sync Server</a> (MariaDB) - This is the official backend implementation for standardnotes. I was using the Nextcloud Notes before, but wasn&rsquo;t happy with the mobile app experience (manual sync over webdav in the Notebooks app). The official iOS app is just as seamless as the native iPhone notes app. This backend server was recently re-written in JavaScript (previously Ruby on Rails). I am not using the recommended &ldquo;script&rdquo; based implementation here as I prefer more control over containers and architecture, so I&rsquo;ve implemented the standalone containers directly in my docker-compose file.</li>
<li><a href="https://github.com/standardnotes/web" target="_blank" rel="noopener noreffer">Standardnotes Web App</a> - the web frontend for standardnotes</li>
<li><a href="https://github.com/eric-pierce/standardnotes-extension-server" target="_blank" rel="noopener noreffer">Standardnotes Extensions</a> - This is a docker image which contains all the open source extensions for standardnotes. It&rsquo;s very simple to run, and lets you use several high powered extensions all self-hosted. I forked this and added additional themes and services.</li>
<li><a href="https://github.com/Ylianst/MeshCentral" target="_blank" rel="noopener noreffer">MeshCentral</a> - This is a complete replacement for TeamViewer, and enables remote access to my devices without needing to use a third party service. The only downside I&rsquo;ve found here is that there isn&rsquo;t a native mobile app.</li>
<li><a href="https://github.com/vabene1111/recipes" target="_blank" rel="noopener noreffer">Tandoor Recipes</a> - App for self-hosting and sharing recipes. With family members spread out this is a great way to connect around favorite recipes and meal planning.</li>
</ul>
<h3 id="possible-future-services">Possible Future Services</h3>
<ul>
<li>Bookstack</li>
<li>Papermerge</li>
<li>Monica CRM</li>
<li>fail2ban - may move it into a container</li>
</ul>
]]></description></item></channel></rss>